spring:
  datasource:
    url: ${POSTGRESQL_URL}
    username: ${POSTGRESQL_USERNAME}
    password: ${POSTGRESQL_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mvc:
    static-path-pattern: /static/**
  config:
    import: classpath:/properties/prod/initial_data.yml, optional:file:.env[.properties]
  data:
    redis:
      host: ${REDIS_HOST}
      port: 7369
    security:
      oauth2:
        client:
          registration:
            kakao:
              client-id: ${KAKAO_CLIENT_ID}
              client-secret: ${KAKAO_CLIENT_SECRET}
              redirect-uri: ${KAKAO_REDIRECT_URI}
              authorization-grant-type: authorization_code
              client-authentication-method: client_secret_post
              client-name: kakao
              scope: profile_nickname, profile_image
          provider:
            kakao:
              authorization-uri: https://kauth.kakao.com/oauth/authorize
              token-uri: https://kauth.kakao.com/oauth/token
              user-info-uri: https://kapi.kakao.com/v2/user/me
              user-name-attribute: id

python:
  server:
    url: ${PYTHON_SERVER_URL}
    question-path: /interview/questions
    evaluation-path: /interview/evaluation

cloud:
  aws:
    s3:
      bucket: ktb-8-dev-bucket
      urlDurationMinutes: 10
      baseFilePath: files/
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KEY}

app:
  jwt:
    secret-key: ${JWT_SECRET_KEY}
    access-expiration: 3600000
    refresh-expiration: 604800000
  properties:
    mainDomain: localhost
    frontendDomain: http://localhost:3000
    cookie:
      sameSite: "None"